{"version":3,"sources":["components/Header.jsx","BLL/history_reducer.js","components/Currency.jsx","API/currencies.js","components/Currency_Container.js","utils/validator.js","components/Input.jsx","components/Add.jsx","BLL/total_reducer.js","components/Add_Container.js","components/List.jsx","components/List_Container.js","components/Clear.jsx","components/CLear_Container.js","components/Total.jsx","components/Total_Container.js","components/Controls.jsx","components/Display.jsx","components/Display_Container.js","App.js","serviceWorker.js","BLL/store.js","index.js"],"names":["Header","className","initialState","history_reducer","state","action","type","date","goodsName","amount","currency","result","Object","keys","sort","forEach","item","Currency","currenciesList","map","value","key","currencies","getRates","a","axios","then","responce","data","currenciesNames","Currency_Container","require","undefined","Input","meta","input","props","touched","error","Select","AddReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","Add","reset","addNote","add","clear","collection","total","total_reducer","push","i","Math","round","from","Add_Container","connect","List","onClick","list","List_Container","ClerFormRedux","Clear","clearNote","Clear_Container","TotalReduxForm","Total","converter","Total_Container","dispatch","rates","Controls","Display","history","arr","entries","elem","random","Display_Container","App","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7f2cbc1a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n      <header className=\"header\">\n        <h1>\n          Manage your expenses!\n        </h1>\n      </header>\n    )\n  }\n  \n  export default Header;","const initialState = {\n  // \"9999-12-23\": [\n  //   {\n  //     goodsName: \"Banana\",\n  //     amount: 100,\n  //     currency: \"PLN\"\n  //   }\n  // ],\n};\n\nconst ADD_NOTE = \"ADD_NOTE-NOTE\";\nconst LIST =\"LIST\";\nconst CLEAR = \"CLEAR\";\n\nconst history_reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      if (state[action.date]) {\n        state[action.date] = [\n          ...state[action.date],\n          {\n            goodsName: action.goodsName,\n            amount: action.amount,\n            currency: action.currency\n          }\n        ]\n      } else {\n        state[action.date] = [\n          {\n            goodsName: action.goodsName,\n            amount: action.amount,\n            currency: action.currency\n          }\n        ]\n      }\n      return {...state};\n    \n    case LIST:\n      const result = {};\n      Object.keys(state)\n      .sort()\n      .forEach(item => {result[item] = state[item]});\n      return result;\n\n    case CLEAR:\n      delete state[action.date];\n      return {...state};\n    \n    default:\n      return state;\n  }\n}\n\nexport const addNote = (date, amount, currency, goodsName) => (\n{type: ADD_NOTE, date, amount, currency, goodsName}\n);\nexport const list = () => ({type: LIST});\nexport const clearNote = (date) => ({type: CLEAR, date});\n \nexport default history_reducer;","import React from 'react';\n\nconst Currency = ({ currenciesList }) => {\n  return (\n    currenciesList.map(item => <option value={item} key={item}>{item}</option>)\n  );\n}\n\nexport default Currency;","import * as axios from \"axios\";\n\nexport const currencies = [\n    \"AED\", \"AFN\", \"ALL\", \"AMD\", \"ANG\", \"AOA\", \"ARS\", \"AUD\", \"AWG\", \"AZN\", \"BAM\", \"BBD\", \"BDT\", \"BGN\", \n    \"BHD\", \"BIF\", \"BMD\", \"BND\", \"BOB\", \"BOV\", \"BRL\", \"BSD\", \"BTN\", \"BWP\", \"BYR\", \"BZD\", \"CAD\", \"CDF\", \n    \"CHE\", \"CHF\", \"CHW\", \"CLF\", \"CLP\", \"CNY\", \"COP\", \"COU\", \"CRC\", \"CUC\", \"CUP\", \"CVE\", \"CZK\", \"DJF\", \n    \"DKK\", \"DOP\", \"DZD\", \"EGP\", \"ERN\", \"ETB\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GEL\", \"GHS\", \"GIP\", \"GMD\", \n    \"GNF\", \"GTQ\", \"GYD\", \"HKD\", \"HNL\", \"HRK\", \"HTG\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"IQD\", \"IRR\", \"ISK\", \n    \"JMD\", \"JOD\", \"JPY\", \"KES\", \"KGS\", \"KHR\", \"KMF\", \"KPW\", \"KWD\", \"KYD\", \"KZT\", \"LAK\", \"LBP\", \"LKR\", \n    \"LRD\", \"LSL\", \"LYD\", \"MAD\", \"MDL\", \"MGA\", \"MKD\", \"MMK\", \"MNT\", \"MOP\", \"MRO\", \"MUR\", \"MVR\", \"MWK\", \n    \"MXN\", \"MXV\", \"MYR\", \"MZN\", \"NAD\", \"NGN\", \"NIO\", \"NOK\", \"NPR\", \"NZD\", \"OMR\", \"PAB\", \"PEN\", \"PGK\", \n    \"PHP\", \"PKR\", \"PLN\", \"PYG\", \"QAR\", \"RON\", \"RSD\", \"RUB\", \"RWF\", \"SAR\", \"SBD\", \"SCR\", \"SDG\", \"SEK\", \n    \"SGD\", \"SHP\", \"SLL\", \"SOS\", \"SRD\", \"SSP\", \"STD\", \"SVC\", \"SYP\", \"SZL\", \"THB\", \"TJS\", \"TMT\", \"TND\", \n    \"TOP\", \"TRY\", \"TTD\", \"TWD\", \"TZS\", \"UAH\", \"UGX\", \"USD\", \"USN\", \"UYI\", \"UYU\", \"UZS\", \"VEF\", \"VND\", \n    \"VUV\", \"WST\", \"XAF\", \"XCD\", \"XDR\", \"XOF\", \"XPF\", \"XSU\", \"XUA\", \"YER\", \"ZAR\", \"ZMW\", \"ZWL\"\n  ]\n  \nexport const getRates = async () => {\n  const currenciesNames = await axios.get(`http://data.fixer.io/api/latest?access_key=ab00cc4fd0db3123de763c9c47e14cdc`)\n  .then(responce => responce.data);\n  return currenciesNames;\n} ","import React from 'react';\nimport Currency from './Currency';\nimport {currencies} from '../API/currencies';\n\nconst Currency_Container = () => {\n    return (\n        <Currency currenciesList={currencies} />\n    )\n}\n\nexport default Currency_Container;","const require = value => value ? undefined : \"required\";\n\nexport default require;","import React from 'react';\n\nexport const Input = ({ meta, input, ...props }) => {\n  return (\n    <>\n      <input {...input} {...props} className={meta.touched && meta.error ? \"add__error\" : \"\"}/>\n    </>\n  )\n}\n\nexport const Select = ({ meta, input, ...props }) => {\n  return (\n    <>\n      <select {...input} {...props} className={meta.touched && meta.error ? \"add__error\" : \"\"}/>\n    </>\n  )\n}\n\n","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport Currency_Container from './Currency_Container';\nimport require from '../utils/validator';\nimport { Input, Select } from './Input';\n\nconst Add = (props) => {\n  const onSubmit = ({ date, amount, currency, goodsName, reset }) => {\n    props.addNote(date, amount, currency, goodsName);\n    props.add(amount, currency);\n    props.reset('add');\n    props.clear();\n  }\n  \n  return (\n    <AddReduxForm onSubmit={onSubmit}/>\n  );\n}\n\nconst AddForm = (props) => {\n  return (\n    <form className=\"form add\" onSubmit={props.handleSubmit}>\n      <button className = \"button\">Add</button>\n      <Field component={Input} name=\"date\" type=\"date\" validate={require}/>\n      <Field component={Input} name=\"amount\" type=\"number\" validate={require}/>\n      <Field component={Select} name=\"currency\" validate={require}>\n        <option></option>\n        <Currency_Container />\n      </Field>\n      <Field component={Input} name=\"goodsName\" type=\"text\" validate={require}/>\n    </form>\n  )\n}\n\nconst AddReduxForm = reduxForm({form: \"add\"})(AddForm);\nexport default Add;","import { getRates } from '../API/currencies';\n\nconst initialState = {\n  collection: [],\n  total: {\n    amount: null,\n    currency: null\n  }\n}\n\nconst ADD = \"ADD\";\nconst TOTAL = \"TOTAL\";\nconst CLEAR = \"CLEAR\";\n\nconst total_reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD:\n      state.collection.push([+action.amount, action.currency]);\n      return {...state}\n\n    case TOTAL:\n      if(action.i === 0) {\n        state.total.amount = 0;\n      } \n      state.total.amount += Math.round(((1 / action.from) * action.amount * 100)) / 100;\n      state.total.currency = action.currency;\n      return {...state}\n\n    case CLEAR:\n      state.total.amount = null;\n      state.total.currency = null;\n      return {...state}\n\n    default:\n      return state;\n  }\n}\n\nexport const add = (amount, currency) => ({type: ADD, amount, currency});\nexport const total = (from, amount, currency, i) => ({type: TOTAL, from, amount, currency, i});\nexport const clear = () => ({type: CLEAR});\nexport default total_reducer;\n\nexport const converter= (collection, currency) => {\n  return (dispatch) => {\n    getRates().then(data => {\n      collection.forEach((item, i) => {\n        dispatch(total(data.rates[item[1]], item[0], currency, i));\n      });\n    });\n  }\n}\n\n\n","import { addNote } from '../BLL/history_reducer';\nimport { connect } from \"react-redux\"\nimport Add from \"./Add\"\nimport { add, clear } from '../BLL/total_reducer';\nimport { reset } from 'redux-form';\n\nconst mapStateToProps = () => {\n  return {}\n}\n\nconst Add_Container = connect(mapStateToProps, {addNote, add, clear, reset})(Add)\n\nexport default Add_Container;","import React from 'react';\n\nconst List = (props) => {\n  const onSubmit = () => {\n    props.list(); \n    props.clear();\n  }\n  \n  return (\n    <div>\n      <button className = \"button\" onClick = {onSubmit}>List</button>\n    </div>\n  )\n}\n\nexport default List;","import { connect } from \"react-redux\";\nimport { list } from '../BLL/history_reducer';\nimport { clear } from '../BLL/total_reducer';\nimport List from './List';\n\nconst mapStateToProps = () => {\n  return {}\n}\n\n\n\nconst List_Container = connect(mapStateToProps, {list, clear})(List);\n\nexport default List_Container;","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input } from './Input';\nimport require from '../utils/validator';\n\nconst Clear = (props) => {\n  const onSubmit = ({ date }) => {\n    props.clearNote(date);\n    props.reset(\"clear\");\n    props.clear();\n  }\n  return (\n    <ClerFormRedux onSubmit={onSubmit} />\n  )\n}\n\nconst ClearForm = (props) => {\n  return (\n    <form className=\"form\" onSubmit={props.handleSubmit}>\n      <button className = \"button\">Clear</button>\n      <Field component={Input} type=\"date\" name=\"date\" validate={require}/>\n    </form>\n  )\n}\n\nconst ClerFormRedux = reduxForm({form: \"clear\"})(ClearForm);\n\nexport default Clear;","import { clearNote } from \"../BLL/history_reducer\";\nimport { clear } from \"../BLL/total_reducer\";\nimport Clear from \"./Clear\";\nimport { reset } from 'redux-form';\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = () => {\n  return {}\n}\n\nconst Clear_Container = connect(mapStateToProps, {clearNote, clear, reset})(Clear);\n\nexport default Clear_Container;","import React from 'react';\nimport Currency_Container from './Currency_Container';\nimport { Field, reduxForm } from 'redux-form';\nimport { Select } from './Input';\nimport require from '../utils/validator';\n\nconst Total = (props) => {\n\n  const onSubmit = ({ currency }) => {\n    props.converter(props.collection, currency, props.amount);\n    props.reset(\"total\");\n  }\n  return (\n    <TotalReduxForm onSubmit={onSubmit} />\n  )\n}\n\nconst TotalForm = (props) => {\n  return (\n    <form className = \"form\" onSubmit={props.handleSubmit}>\n      <button className=\"button\">Total</button>\n      <Field component={Select} name=\"currency\" validate={require}>\n      <option></option>\n        <Currency_Container />\n      </Field>\n    </form>\n  )\n}\n\nconst TotalReduxForm = reduxForm({form: \"total\"})(TotalForm);\n\nexport default Total;","import { converter } from \"../BLL/total_reducer\"\nimport { connect } from \"react-redux\"\nimport Total from \"./Total\"\nimport { reset } from 'redux-form';\n\nconst mapStateToProps = (state) => {\n  return {\n    collection: state.total.collection\n  }\n}\n\n\nconst Total_Container = connect(mapStateToProps, {converter, reset})(Total);\n\nexport default Total_Container;","import React from 'react';\nimport Add_Container from './Add_Container';\nimport List_Container from './List_Container';\nimport Clear_Container from './CLear_Container';\nimport Total_Container from './Total_Container';\n\nconst Controls = () => {\n  return (\n    <>\n      <Add_Container />\n      <List_Container />\n      <Clear_Container />\n      <Total_Container />\n    </>\n  )\n}\n  \nexport default Controls;","import React from 'react';\n\nconst Display = ({ history, total }) => {\n  // console.log(total.total.amount);\n  // console.log(total.total.currency);\n  let arr = Object.entries(history);\n    return  (\n      <section>\n        {arr.map((item, i) => {\n          return (\n            <div key={i}>\n              {item[0]}\n              {item[1].map(elem => \n                <div key={i + Math.random()}>\n                  {elem.goodsName}&nbsp;\n                  {elem.amount}&nbsp;\n                  {elem.currency}\n                </div>\n              )}\n            </div>    \n          )\n        })}\n        <br />\n      <div>\n        {total.total.amount}&nbsp;\n        {total.total.currency}\n      </div>\n      </section>\n    )\n}\n\nexport default Display;","import { connect } from 'react-redux';\nimport Display from './Display';\n\nconst mapStateToProps = (state) => {\n  return {\n    history: state.history,\n    total: state.total\n  }\n}\n\nconst Display_Container = connect(mapStateToProps)(Display);\n\nexport default Display_Container;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Controls from './components/Controls';\nimport Display_Container from './components/Display_Container';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Controls />\n      <Display_Container />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { reducer as formReducer } from 'redux-form';\nimport history_reducer from \"./history_reducer\";\nimport total_reducer from \"./total_reducer\";\nimport thunk from \"redux-thunk\";\n\nlet reducers = combineReducers({\n  form: formReducer,\n  history: history_reducer,\n  total: total_reducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunk));\n\nwindow.store = store;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './BLL/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}